rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to validate file metadata
    function isValidFileMetadata() {
      let hasRequiredFields = 
        request.resource.data.keys().hasAll([
          'filename',
          'r2Key',
          'userId',
          'uploadedAt',
          'fileType',
          'size',
          'totalRows',
          'totalColumns',
          'numericColumns',
          'categoricalColumns'
        ]);
      
      let isValidSize = request.resource.data.size is number && 
                       request.resource.data.size > 0;
      
      let isValidRows = request.resource.data.totalRows is number && 
                       request.resource.data.totalRows >= 0;
      
      let isValidColumns = request.resource.data.totalColumns is number && 
                          request.resource.data.totalColumns > 0;
      
      let isValidUserId = request.resource.data.userId == request.auth.uid;
      
      return hasRequiredFields && 
             isValidSize && 
             isValidRows && 
             isValidColumns && 
             isValidUserId;
    }

    // Rules for the files collection
    match /files/{fileId} {
      // Allow read if user owns the file
      allow read: if isOwner(resource.data.userId);
      
      // Allow create if user is authenticated and data is valid
      allow create: if isAuthenticated() && isValidFileMetadata();
      
      // Allow update if user owns the file and data remains valid
      allow update: if isOwner(resource.data.userId) && isValidFileMetadata();
      
      // Allow delete if user owns the file
      allow delete: if isOwner(resource.data.userId);
    }

    // Deny access to all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 